// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESS_DATABASE_URL")
}

model Organization {
  id        Int      @id @default(autoincrement())
  isDeleted Boolean  @default(false)
  name      String   @unique
  email     String   @unique
  phone     String   @unique @db.VarChar(20)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("organization")
}

model Address {
  id                   Int           @id @default(autoincrement())
  isDeleted            Boolean       @default(false)
  isActive             Boolean       @default(true)
  line1                String
  line2                String
  line3                String?
  landmark             String
  area                 String
  city                 String
  district             String
  state                String
  pincode              Int
  country              String
  latitude             Decimal
  longitude            Decimal
  taxIdentities        TaxIdentity[]
  branchs              Branch[]
  contacts             Contact[]
  account              Account?      @relation(fields: [accountId], references: [id])
  accountId            Int?
  // auditing fields
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  lastModifiedBy       User?         @relation(fields: [lastModifiedByUserId], references: [id])
  lastModifiedByUserId Int?

  @@map("addresses")
}

model TaxIdentity {
  id                   Int       @id @default(autoincrement())
  isDeleted            Boolean   @default(false)
  isActive             Boolean   @default(true)
  //GST Related fields
  gst                  String?   @db.VarChar(55)
  gstRegistrationDate  DateTime?
  gstVerified          Boolean   @default(false)
  gstAddress           Address?  @relation(fields: [gstAddressId], references: [id])
  gstAddressId         Int?
  // PAN Related fields
  pan                  String?   @db.VarChar(30)
  panVerified          Boolean   @default(false)
  // VAT Related fields
  vat                  String?   @db.VarChar(55)
  // TIN Related fields
  tin                  String?   @db.VarChar(55)
  account              Account[]
  branch               Branch[]
  // auditing fields
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  lastModifiedBy       User?     @relation(fields: [lastModifiedByUserId], references: [id])
  lastModifiedByUserId Int?

  @@map("tax_identities")
}

model Branch {
  id                   Int         @id @default(autoincrement())
  isDeleted            Boolean     @default(false)
  name                 String      @unique @db.VarChar(255)
  isActive             Boolean     @default(true)
  email                String      @unique
  phone                String      @unique @db.VarChar(20)
  alternatePhone       String      @db.VarChar(20)
  address              Address     @relation(fields: [addressId], references: [id])
  addressId            Int
  taxIdentity          TaxIdentity @relation(fields: [taxIdentityId], references: [id])
  taxIdentityId        Int
  accounts             Account[]
  contacts             Contact[]
  // auditing fields
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  lastModifiedBy       User?       @relation(fields: [lastModifiedByUserId], references: [id])
  lastModifiedByUserId Int?

  @@map("branches")
}

model Contact {
  id                   Int      @id @default(autoincrement())
  isDeleted            Boolean  @default(false)
  name                 String
  email                String   @unique
  phone                String   @unique @db.VarChar(20)
  alternatePhone       String   @db.VarChar(20)
  address              Address  @relation(fields: [addressId], references: [id])
  addressId            Int
  branch               Branch?  @relation(fields: [branchId], references: [id])
  branchId             Int?
  // auditing fields
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  lastModifiedBy       User?    @relation(fields: [lastModifiedByUserId], references: [id])
  lastModifiedByUserId Int?

  @@map("contacts")
}

model AccountType {
  id                   Int              @id @default(autoincrement())
  isDeleted            Boolean          @default(false)
  name                 String           @unique
  subtypes             AccountSubtype[]
  accounts             Account[]
  // auditing fields
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  lastModifiedBy       User?            @relation(fields: [lastModifiedByUserId], references: [id])
  lastModifiedByUserId Int?

  @@map("account_types")
}

model AccountSubtype {
  id                   Int          @id @default(autoincrement())
  isDeleted            Boolean      @default(false)
  name                 String       @unique
  accountType          AccountType? @relation(fields: [accountTypeId], references: [id])
  accountTypeId        Int?
  accounts             Account[]
  // auditing fields
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  lastModifiedBy       User?        @relation(fields: [lastModifiedByUserId], references: [id])
  lastModifiedByUserId Int?

  @@map("account_subtypes")
}

model Account {
  id                   Int            @id @default(autoincrement())
  isDeleted            Boolean        @default(false)
  accountType          AccountType    @relation(fields: [accountTypeId], references: [id])
  accountTypeId        Int
  accountSubtype       AccountSubtype @relation(fields: [accountSubtypeId], references: [id])
  accountSubtypeId     Int
  isVip                Boolean        @default(false)
  isKey                Boolean        @default(false)
  name                 String
  registeredPhone      String         @unique @db.VarChar(20)
  alternatePhone       String         @db.VarChar(20)
  email                String
  branch               Branch         @relation(fields: [branchId], references: [id])
  branchId             Int
  taxIdentityId        Int?
  taxIdentity          TaxIdentity?   @relation(fields: [taxIdentityId], references: [id])
  addresses            Address[]
  parentId             Int?
  parent               Account?       @relation("ParentChildRelation", fields: [parentId], references: [id])
  childAccoutns        Account[]      @relation("ParentChildRelation")
  // auditing fields
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  lastModifiedBy       User?          @relation(fields: [lastModifiedByUserId], references: [id])
  lastModifiedByUserId Int?

  @@map("accounts")
}

model User {
  id                      Int              @id @default(autoincrement())
  isDeleted               Boolean          @default(false)
  username                String           @unique @db.VarChar(255)
  password                String           @db.VarChar(255)
  modifiedAccountTypes    AccountType[]
  modifiedAccountSubtypes AccountSubtype[]
  modifiedAddresses       Address[]
  modifiedtaxIdentities   TaxIdentity[]
  modifiedBranchs         Branch[]
  modifiedContacts        Contact[]
  modifiedAccounts        Account[]

  // auditing fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}
